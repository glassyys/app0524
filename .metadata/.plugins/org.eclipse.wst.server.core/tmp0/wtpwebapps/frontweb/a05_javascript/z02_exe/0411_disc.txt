1조 토론과제 결과입니다. 0411
### 토론할 문제

1. 동적 배열과 정적 배열의 차이점에 대해 설명하고, 언제 정적 배열을 사용하는 것이 더 유리한지 토론하세요.

1-1) 동적 배열과 정적 배열의 차이점
가) 정적배열
- 빠른 속도로 접근하여 처리가 가능하지만
- 읽기만 가능하며 쓰기, 수정, 삭제가 불가능하다.
- 크기가 고정되어있기 때문에 메모리 관리가 간단하고 효율적이다.
 
나) 동적배열
- 읽기나 쓰기가 가능하고, 수정, 삭제 역시 가능하다. 

1-2) 정적 배열을 사용하는 것이 더 유리
고정된 크기를 갖는 인덱스를 통해 요소에 직접 접근할 수 있기 때문에
인덱스 접근의 성능이 상대적으로 좋다.
따라서 예측가능한 크기를 가지고 관리가 쉬워야하는
상황에서 배열을 사용할 때 정적배열을 사용하는 것이 유리하다.

2. 함수를 사용하는 이유와 함수 없이 코드를 작성할 때 발생할 수 있는 문제점은 무엇인가요?
2-1) 함수를 사용하는 이유
- 코드 재사용(한번 정의된 함수는 여러곳에서 호출하여 사용할 수 있다) 가능

2-2) 함수 없이 코드를 작성할 때 발생할 수 있는 문제점
- 길이가 길어지게 되면서 가독성이 떨어지고 저장용량은 커진다. 
- 길어진 코드로 인해 코드 재생 시간이 길어지고
  독립적인 절차가 동시에 얽혀 오류발생 확률이 더 높아진다.

3. 프로그래밍에서 '모듈화'와 '추상화'의 중요성에 대해 토론하세요.
어떻게 이 두 개념이 큰 프로젝트를 더 효율적으로 관리할 수 있게 도와주나요?
1) 유지보수가 용이하고 코드의 재사용이 가능합니다.
2) 개발자는 복잡한 로직을 신경쓰지 않고 사용이 가능합니다.
3) 추상화를 하면 세부사항을 변경하거나 업그레이드 할때 소스에 영향을 덜 줍니다.

3-1) 중요성
모듈화: 소프트웨어의 성능을 향상시키거나 시스템의 수정 및 재사용, 유지 관리 등이 용이해진다.
추상화: 완전한 시스템을 구축하기 전 그 시스템과 유사한 모델을 만들어서 여러 가지 요인들을 테스트할 수 있다.

3-2)  효율적으로 관리 장점
- 모듈화: 함수를 통해 코드를 작은 단위로 나누어 관리할 수 있으며
- 추상화: 최소의 비용으로 실제 상황에 대처할 수 있고, 시스템 구조 및 구성을 대략적으로 파악할 수 있게 해준다.
- 모듈화와 추상화를 적절히 사용하여 구현된 유연한 프로그램은 코드 수정 및 폐기시 
  유용하게 작용할 수 있기에 큰 프로젝트에서 시간 투자 및 유지보수에 용이하게 작용해
  더 효율적인 진행을 이끌 수 있다.
